// Code generated by Prisma (prisma@1.34.2). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

export const typeDefs = /* GraphQL */ `type AggregateCategory {
  count: Int!
}

type AggregateConversation {
  count: Int!
}

type AggregateNotification {
  count: Int!
}

type AggregateReview {
  count: Int!
}

type AggregateSchool {
  count: Int!
}

type AggregateTask {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateUserCategory {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Category {
  id: ID!
  title: String!
  image_url: String
  createdAt: DateTime!
  updatedAt: DateTime!
  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  userCategories(where: UserCategoryWhereInput, orderBy: UserCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserCategory!]
}

type CategoryConnection {
  pageInfo: PageInfo!
  edges: [CategoryEdge]!
  aggregate: AggregateCategory!
}

input CategoryCreateInput {
  id: ID
  title: String!
  image_url: String
  tasks: TaskCreateManyWithoutCategoryInput
  userCategories: UserCategoryCreateManyWithoutCategoryInput
}

input CategoryCreateOneWithoutTasksInput {
  create: CategoryCreateWithoutTasksInput
  connect: CategoryWhereUniqueInput
}

input CategoryCreateOneWithoutUserCategoriesInput {
  create: CategoryCreateWithoutUserCategoriesInput
  connect: CategoryWhereUniqueInput
}

input CategoryCreateWithoutTasksInput {
  id: ID
  title: String!
  image_url: String
  userCategories: UserCategoryCreateManyWithoutCategoryInput
}

input CategoryCreateWithoutUserCategoriesInput {
  id: ID
  title: String!
  image_url: String
  tasks: TaskCreateManyWithoutCategoryInput
}

type CategoryEdge {
  node: Category!
  cursor: String!
}

enum CategoryOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  image_url_ASC
  image_url_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type CategoryPreviousValues {
  id: ID!
  title: String!
  image_url: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CategorySubscriptionPayload {
  mutation: MutationType!
  node: Category
  updatedFields: [String!]
  previousValues: CategoryPreviousValues
}

input CategorySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CategoryWhereInput
  AND: [CategorySubscriptionWhereInput!]
  OR: [CategorySubscriptionWhereInput!]
  NOT: [CategorySubscriptionWhereInput!]
}

input CategoryUpdateInput {
  title: String
  image_url: String
  tasks: TaskUpdateManyWithoutCategoryInput
  userCategories: UserCategoryUpdateManyWithoutCategoryInput
}

input CategoryUpdateManyMutationInput {
  title: String
  image_url: String
}

input CategoryUpdateOneRequiredWithoutTasksInput {
  create: CategoryCreateWithoutTasksInput
  update: CategoryUpdateWithoutTasksDataInput
  upsert: CategoryUpsertWithoutTasksInput
  connect: CategoryWhereUniqueInput
}

input CategoryUpdateOneWithoutUserCategoriesInput {
  create: CategoryCreateWithoutUserCategoriesInput
  update: CategoryUpdateWithoutUserCategoriesDataInput
  upsert: CategoryUpsertWithoutUserCategoriesInput
  delete: Boolean
  disconnect: Boolean
  connect: CategoryWhereUniqueInput
}

input CategoryUpdateWithoutTasksDataInput {
  title: String
  image_url: String
  userCategories: UserCategoryUpdateManyWithoutCategoryInput
}

input CategoryUpdateWithoutUserCategoriesDataInput {
  title: String
  image_url: String
  tasks: TaskUpdateManyWithoutCategoryInput
}

input CategoryUpsertWithoutTasksInput {
  update: CategoryUpdateWithoutTasksDataInput!
  create: CategoryCreateWithoutTasksInput!
}

input CategoryUpsertWithoutUserCategoriesInput {
  update: CategoryUpdateWithoutUserCategoriesDataInput!
  create: CategoryCreateWithoutUserCategoriesInput!
}

input CategoryWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  image_url: String
  image_url_not: String
  image_url_in: [String!]
  image_url_not_in: [String!]
  image_url_lt: String
  image_url_lte: String
  image_url_gt: String
  image_url_gte: String
  image_url_contains: String
  image_url_not_contains: String
  image_url_starts_with: String
  image_url_not_starts_with: String
  image_url_ends_with: String
  image_url_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  tasks_every: TaskWhereInput
  tasks_some: TaskWhereInput
  tasks_none: TaskWhereInput
  userCategories_every: UserCategoryWhereInput
  userCategories_some: UserCategoryWhereInput
  userCategories_none: UserCategoryWhereInput
  AND: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  NOT: [CategoryWhereInput!]
}

input CategoryWhereUniqueInput {
  id: ID
  title: String
}

type Conversation {
  id: ID!
  description: String
  active: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
  participants(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  task: Task
}

type ConversationConnection {
  pageInfo: PageInfo!
  edges: [ConversationEdge]!
  aggregate: AggregateConversation!
}

input ConversationCreateInput {
  id: ID
  description: String
  active: Boolean
  participants: UserCreateManyWithoutConversationsInput
  task: TaskCreateOneWithoutConversationsInput
}

input ConversationCreateManyWithoutParticipantsInput {
  create: [ConversationCreateWithoutParticipantsInput!]
  connect: [ConversationWhereUniqueInput!]
}

input ConversationCreateManyWithoutTaskInput {
  create: [ConversationCreateWithoutTaskInput!]
  connect: [ConversationWhereUniqueInput!]
}

input ConversationCreateWithoutParticipantsInput {
  id: ID
  description: String
  active: Boolean
  task: TaskCreateOneWithoutConversationsInput
}

input ConversationCreateWithoutTaskInput {
  id: ID
  description: String
  active: Boolean
  participants: UserCreateManyWithoutConversationsInput
}

type ConversationEdge {
  node: Conversation!
  cursor: String!
}

enum ConversationOrderByInput {
  id_ASC
  id_DESC
  description_ASC
  description_DESC
  active_ASC
  active_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ConversationPreviousValues {
  id: ID!
  description: String
  active: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input ConversationScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  active: Boolean
  active_not: Boolean
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [ConversationScalarWhereInput!]
  OR: [ConversationScalarWhereInput!]
  NOT: [ConversationScalarWhereInput!]
}

type ConversationSubscriptionPayload {
  mutation: MutationType!
  node: Conversation
  updatedFields: [String!]
  previousValues: ConversationPreviousValues
}

input ConversationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ConversationWhereInput
  AND: [ConversationSubscriptionWhereInput!]
  OR: [ConversationSubscriptionWhereInput!]
  NOT: [ConversationSubscriptionWhereInput!]
}

input ConversationUpdateInput {
  description: String
  active: Boolean
  participants: UserUpdateManyWithoutConversationsInput
  task: TaskUpdateOneWithoutConversationsInput
}

input ConversationUpdateManyDataInput {
  description: String
  active: Boolean
}

input ConversationUpdateManyMutationInput {
  description: String
  active: Boolean
}

input ConversationUpdateManyWithoutParticipantsInput {
  create: [ConversationCreateWithoutParticipantsInput!]
  delete: [ConversationWhereUniqueInput!]
  connect: [ConversationWhereUniqueInput!]
  set: [ConversationWhereUniqueInput!]
  disconnect: [ConversationWhereUniqueInput!]
  update: [ConversationUpdateWithWhereUniqueWithoutParticipantsInput!]
  upsert: [ConversationUpsertWithWhereUniqueWithoutParticipantsInput!]
  deleteMany: [ConversationScalarWhereInput!]
  updateMany: [ConversationUpdateManyWithWhereNestedInput!]
}

input ConversationUpdateManyWithoutTaskInput {
  create: [ConversationCreateWithoutTaskInput!]
  delete: [ConversationWhereUniqueInput!]
  connect: [ConversationWhereUniqueInput!]
  set: [ConversationWhereUniqueInput!]
  disconnect: [ConversationWhereUniqueInput!]
  update: [ConversationUpdateWithWhereUniqueWithoutTaskInput!]
  upsert: [ConversationUpsertWithWhereUniqueWithoutTaskInput!]
  deleteMany: [ConversationScalarWhereInput!]
  updateMany: [ConversationUpdateManyWithWhereNestedInput!]
}

input ConversationUpdateManyWithWhereNestedInput {
  where: ConversationScalarWhereInput!
  data: ConversationUpdateManyDataInput!
}

input ConversationUpdateWithoutParticipantsDataInput {
  description: String
  active: Boolean
  task: TaskUpdateOneWithoutConversationsInput
}

input ConversationUpdateWithoutTaskDataInput {
  description: String
  active: Boolean
  participants: UserUpdateManyWithoutConversationsInput
}

input ConversationUpdateWithWhereUniqueWithoutParticipantsInput {
  where: ConversationWhereUniqueInput!
  data: ConversationUpdateWithoutParticipantsDataInput!
}

input ConversationUpdateWithWhereUniqueWithoutTaskInput {
  where: ConversationWhereUniqueInput!
  data: ConversationUpdateWithoutTaskDataInput!
}

input ConversationUpsertWithWhereUniqueWithoutParticipantsInput {
  where: ConversationWhereUniqueInput!
  update: ConversationUpdateWithoutParticipantsDataInput!
  create: ConversationCreateWithoutParticipantsInput!
}

input ConversationUpsertWithWhereUniqueWithoutTaskInput {
  where: ConversationWhereUniqueInput!
  update: ConversationUpdateWithoutTaskDataInput!
  create: ConversationCreateWithoutTaskInput!
}

input ConversationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  active: Boolean
  active_not: Boolean
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  participants_every: UserWhereInput
  participants_some: UserWhereInput
  participants_none: UserWhereInput
  task: TaskWhereInput
  AND: [ConversationWhereInput!]
  OR: [ConversationWhereInput!]
  NOT: [ConversationWhereInput!]
}

input ConversationWhereUniqueInput {
  id: ID
}

scalar DateTime

scalar Json

scalar Long

type Mutation {
  createCategory(data: CategoryCreateInput!): Category!
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  updateManyCategories(data: CategoryUpdateManyMutationInput!, where: CategoryWhereInput): BatchPayload!
  upsertCategory(where: CategoryWhereUniqueInput!, create: CategoryCreateInput!, update: CategoryUpdateInput!): Category!
  deleteCategory(where: CategoryWhereUniqueInput!): Category
  deleteManyCategories(where: CategoryWhereInput): BatchPayload!
  createConversation(data: ConversationCreateInput!): Conversation!
  updateConversation(data: ConversationUpdateInput!, where: ConversationWhereUniqueInput!): Conversation
  updateManyConversations(data: ConversationUpdateManyMutationInput!, where: ConversationWhereInput): BatchPayload!
  upsertConversation(where: ConversationWhereUniqueInput!, create: ConversationCreateInput!, update: ConversationUpdateInput!): Conversation!
  deleteConversation(where: ConversationWhereUniqueInput!): Conversation
  deleteManyConversations(where: ConversationWhereInput): BatchPayload!
  createNotification(data: NotificationCreateInput!): Notification!
  updateNotification(data: NotificationUpdateInput!, where: NotificationWhereUniqueInput!): Notification
  updateManyNotifications(data: NotificationUpdateManyMutationInput!, where: NotificationWhereInput): BatchPayload!
  upsertNotification(where: NotificationWhereUniqueInput!, create: NotificationCreateInput!, update: NotificationUpdateInput!): Notification!
  deleteNotification(where: NotificationWhereUniqueInput!): Notification
  deleteManyNotifications(where: NotificationWhereInput): BatchPayload!
  createReview(data: ReviewCreateInput!): Review!
  updateReview(data: ReviewUpdateInput!, where: ReviewWhereUniqueInput!): Review
  updateManyReviews(data: ReviewUpdateManyMutationInput!, where: ReviewWhereInput): BatchPayload!
  upsertReview(where: ReviewWhereUniqueInput!, create: ReviewCreateInput!, update: ReviewUpdateInput!): Review!
  deleteReview(where: ReviewWhereUniqueInput!): Review
  deleteManyReviews(where: ReviewWhereInput): BatchPayload!
  createSchool(data: SchoolCreateInput!): School!
  updateSchool(data: SchoolUpdateInput!, where: SchoolWhereUniqueInput!): School
  updateManySchools(data: SchoolUpdateManyMutationInput!, where: SchoolWhereInput): BatchPayload!
  upsertSchool(where: SchoolWhereUniqueInput!, create: SchoolCreateInput!, update: SchoolUpdateInput!): School!
  deleteSchool(where: SchoolWhereUniqueInput!): School
  deleteManySchools(where: SchoolWhereInput): BatchPayload!
  createTask(data: TaskCreateInput!): Task!
  updateTask(data: TaskUpdateInput!, where: TaskWhereUniqueInput!): Task
  updateManyTasks(data: TaskUpdateManyMutationInput!, where: TaskWhereInput): BatchPayload!
  upsertTask(where: TaskWhereUniqueInput!, create: TaskCreateInput!, update: TaskUpdateInput!): Task!
  deleteTask(where: TaskWhereUniqueInput!): Task
  deleteManyTasks(where: TaskWhereInput): BatchPayload!
  createUser(data: UserCreateInput!): User!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  deleteUser(where: UserWhereUniqueInput!): User
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  createUserCategory(data: UserCategoryCreateInput!): UserCategory!
  updateUserCategory(data: UserCategoryUpdateInput!, where: UserCategoryWhereUniqueInput!): UserCategory
  updateManyUserCategories(data: UserCategoryUpdateManyMutationInput!, where: UserCategoryWhereInput): BatchPayload!
  upsertUserCategory(where: UserCategoryWhereUniqueInput!, create: UserCategoryCreateInput!, update: UserCategoryUpdateInput!): UserCategory!
  deleteUserCategory(where: UserCategoryWhereUniqueInput!): UserCategory
  deleteManyUserCategories(where: UserCategoryWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type Notification {
  id: ID!
  title: String
  description: String
  image_url: String
  data: Json
  createdAt: DateTime!
  updatedAt: DateTime!
  expiration: DateTime!
  read: Boolean
  user: User!
}

type NotificationConnection {
  pageInfo: PageInfo!
  edges: [NotificationEdge]!
  aggregate: AggregateNotification!
}

input NotificationCreateInput {
  id: ID
  title: String
  description: String
  image_url: String
  data: Json
  expiration: DateTime!
  read: Boolean
  user: UserCreateOneWithoutNotificationsInput!
}

input NotificationCreateManyWithoutUserInput {
  create: [NotificationCreateWithoutUserInput!]
  connect: [NotificationWhereUniqueInput!]
}

input NotificationCreateWithoutUserInput {
  id: ID
  title: String
  description: String
  image_url: String
  data: Json
  expiration: DateTime!
  read: Boolean
}

type NotificationEdge {
  node: Notification!
  cursor: String!
}

enum NotificationOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  image_url_ASC
  image_url_DESC
  data_ASC
  data_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  expiration_ASC
  expiration_DESC
  read_ASC
  read_DESC
}

type NotificationPreviousValues {
  id: ID!
  title: String
  description: String
  image_url: String
  data: Json
  createdAt: DateTime!
  updatedAt: DateTime!
  expiration: DateTime!
  read: Boolean
}

input NotificationScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  image_url: String
  image_url_not: String
  image_url_in: [String!]
  image_url_not_in: [String!]
  image_url_lt: String
  image_url_lte: String
  image_url_gt: String
  image_url_gte: String
  image_url_contains: String
  image_url_not_contains: String
  image_url_starts_with: String
  image_url_not_starts_with: String
  image_url_ends_with: String
  image_url_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  expiration: DateTime
  expiration_not: DateTime
  expiration_in: [DateTime!]
  expiration_not_in: [DateTime!]
  expiration_lt: DateTime
  expiration_lte: DateTime
  expiration_gt: DateTime
  expiration_gte: DateTime
  read: Boolean
  read_not: Boolean
  AND: [NotificationScalarWhereInput!]
  OR: [NotificationScalarWhereInput!]
  NOT: [NotificationScalarWhereInput!]
}

type NotificationSubscriptionPayload {
  mutation: MutationType!
  node: Notification
  updatedFields: [String!]
  previousValues: NotificationPreviousValues
}

input NotificationSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: NotificationWhereInput
  AND: [NotificationSubscriptionWhereInput!]
  OR: [NotificationSubscriptionWhereInput!]
  NOT: [NotificationSubscriptionWhereInput!]
}

input NotificationUpdateInput {
  title: String
  description: String
  image_url: String
  data: Json
  expiration: DateTime
  read: Boolean
  user: UserUpdateOneRequiredWithoutNotificationsInput
}

input NotificationUpdateManyDataInput {
  title: String
  description: String
  image_url: String
  data: Json
  expiration: DateTime
  read: Boolean
}

input NotificationUpdateManyMutationInput {
  title: String
  description: String
  image_url: String
  data: Json
  expiration: DateTime
  read: Boolean
}

input NotificationUpdateManyWithoutUserInput {
  create: [NotificationCreateWithoutUserInput!]
  delete: [NotificationWhereUniqueInput!]
  connect: [NotificationWhereUniqueInput!]
  set: [NotificationWhereUniqueInput!]
  disconnect: [NotificationWhereUniqueInput!]
  update: [NotificationUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [NotificationUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [NotificationScalarWhereInput!]
  updateMany: [NotificationUpdateManyWithWhereNestedInput!]
}

input NotificationUpdateManyWithWhereNestedInput {
  where: NotificationScalarWhereInput!
  data: NotificationUpdateManyDataInput!
}

input NotificationUpdateWithoutUserDataInput {
  title: String
  description: String
  image_url: String
  data: Json
  expiration: DateTime
  read: Boolean
}

input NotificationUpdateWithWhereUniqueWithoutUserInput {
  where: NotificationWhereUniqueInput!
  data: NotificationUpdateWithoutUserDataInput!
}

input NotificationUpsertWithWhereUniqueWithoutUserInput {
  where: NotificationWhereUniqueInput!
  update: NotificationUpdateWithoutUserDataInput!
  create: NotificationCreateWithoutUserInput!
}

input NotificationWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  image_url: String
  image_url_not: String
  image_url_in: [String!]
  image_url_not_in: [String!]
  image_url_lt: String
  image_url_lte: String
  image_url_gt: String
  image_url_gte: String
  image_url_contains: String
  image_url_not_contains: String
  image_url_starts_with: String
  image_url_not_starts_with: String
  image_url_ends_with: String
  image_url_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  expiration: DateTime
  expiration_not: DateTime
  expiration_in: [DateTime!]
  expiration_not_in: [DateTime!]
  expiration_lt: DateTime
  expiration_lte: DateTime
  expiration_gt: DateTime
  expiration_gte: DateTime
  read: Boolean
  read_not: Boolean
  user: UserWhereInput
  AND: [NotificationWhereInput!]
  OR: [NotificationWhereInput!]
  NOT: [NotificationWhereInput!]
}

input NotificationWhereUniqueInput {
  id: ID
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  category(where: CategoryWhereUniqueInput!): Category
  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category]!
  categoriesConnection(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CategoryConnection!
  conversation(where: ConversationWhereUniqueInput!): Conversation
  conversations(where: ConversationWhereInput, orderBy: ConversationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Conversation]!
  conversationsConnection(where: ConversationWhereInput, orderBy: ConversationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ConversationConnection!
  notification(where: NotificationWhereUniqueInput!): Notification
  notifications(where: NotificationWhereInput, orderBy: NotificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Notification]!
  notificationsConnection(where: NotificationWhereInput, orderBy: NotificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): NotificationConnection!
  review(where: ReviewWhereUniqueInput!): Review
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review]!
  reviewsConnection(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ReviewConnection!
  school(where: SchoolWhereUniqueInput!): School
  schools(where: SchoolWhereInput, orderBy: SchoolOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [School]!
  schoolsConnection(where: SchoolWhereInput, orderBy: SchoolOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SchoolConnection!
  task(where: TaskWhereUniqueInput!): Task
  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task]!
  tasksConnection(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TaskConnection!
  user(where: UserWhereUniqueInput!): User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  userCategory(where: UserCategoryWhereUniqueInput!): UserCategory
  userCategories(where: UserCategoryWhereInput, orderBy: UserCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserCategory]!
  userCategoriesConnection(where: UserCategoryWhereInput, orderBy: UserCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserCategoryConnection!
  node(id: ID!): Node
}

enum RATING {
  POSITIVE
  NEGATIVE
  NOT_RATED
}

type Review {
  id: ID!
  title: String
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
  rating: RATING
  reviewer: User!
  task: Task
}

type ReviewConnection {
  pageInfo: PageInfo!
  edges: [ReviewEdge]!
  aggregate: AggregateReview!
}

input ReviewCreateInput {
  id: ID
  title: String
  description: String
  rating: RATING
  reviewer: UserCreateOneWithoutReviewsInput!
  task: TaskCreateOneWithoutReviewsInput
}

input ReviewCreateManyWithoutReviewerInput {
  create: [ReviewCreateWithoutReviewerInput!]
  connect: [ReviewWhereUniqueInput!]
}

input ReviewCreateManyWithoutTaskInput {
  create: [ReviewCreateWithoutTaskInput!]
  connect: [ReviewWhereUniqueInput!]
}

input ReviewCreateWithoutReviewerInput {
  id: ID
  title: String
  description: String
  rating: RATING
  task: TaskCreateOneWithoutReviewsInput
}

input ReviewCreateWithoutTaskInput {
  id: ID
  title: String
  description: String
  rating: RATING
  reviewer: UserCreateOneWithoutReviewsInput!
}

type ReviewEdge {
  node: Review!
  cursor: String!
}

enum ReviewOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  rating_ASC
  rating_DESC
}

type ReviewPreviousValues {
  id: ID!
  title: String
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
  rating: RATING
}

input ReviewScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  rating: RATING
  rating_not: RATING
  rating_in: [RATING!]
  rating_not_in: [RATING!]
  AND: [ReviewScalarWhereInput!]
  OR: [ReviewScalarWhereInput!]
  NOT: [ReviewScalarWhereInput!]
}

type ReviewSubscriptionPayload {
  mutation: MutationType!
  node: Review
  updatedFields: [String!]
  previousValues: ReviewPreviousValues
}

input ReviewSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ReviewWhereInput
  AND: [ReviewSubscriptionWhereInput!]
  OR: [ReviewSubscriptionWhereInput!]
  NOT: [ReviewSubscriptionWhereInput!]
}

input ReviewUpdateInput {
  title: String
  description: String
  rating: RATING
  reviewer: UserUpdateOneRequiredWithoutReviewsInput
  task: TaskUpdateOneWithoutReviewsInput
}

input ReviewUpdateManyDataInput {
  title: String
  description: String
  rating: RATING
}

input ReviewUpdateManyMutationInput {
  title: String
  description: String
  rating: RATING
}

input ReviewUpdateManyWithoutReviewerInput {
  create: [ReviewCreateWithoutReviewerInput!]
  delete: [ReviewWhereUniqueInput!]
  connect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  disconnect: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutReviewerInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutReviewerInput!]
  deleteMany: [ReviewScalarWhereInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
}

input ReviewUpdateManyWithoutTaskInput {
  create: [ReviewCreateWithoutTaskInput!]
  delete: [ReviewWhereUniqueInput!]
  connect: [ReviewWhereUniqueInput!]
  set: [ReviewWhereUniqueInput!]
  disconnect: [ReviewWhereUniqueInput!]
  update: [ReviewUpdateWithWhereUniqueWithoutTaskInput!]
  upsert: [ReviewUpsertWithWhereUniqueWithoutTaskInput!]
  deleteMany: [ReviewScalarWhereInput!]
  updateMany: [ReviewUpdateManyWithWhereNestedInput!]
}

input ReviewUpdateManyWithWhereNestedInput {
  where: ReviewScalarWhereInput!
  data: ReviewUpdateManyDataInput!
}

input ReviewUpdateWithoutReviewerDataInput {
  title: String
  description: String
  rating: RATING
  task: TaskUpdateOneWithoutReviewsInput
}

input ReviewUpdateWithoutTaskDataInput {
  title: String
  description: String
  rating: RATING
  reviewer: UserUpdateOneRequiredWithoutReviewsInput
}

input ReviewUpdateWithWhereUniqueWithoutReviewerInput {
  where: ReviewWhereUniqueInput!
  data: ReviewUpdateWithoutReviewerDataInput!
}

input ReviewUpdateWithWhereUniqueWithoutTaskInput {
  where: ReviewWhereUniqueInput!
  data: ReviewUpdateWithoutTaskDataInput!
}

input ReviewUpsertWithWhereUniqueWithoutReviewerInput {
  where: ReviewWhereUniqueInput!
  update: ReviewUpdateWithoutReviewerDataInput!
  create: ReviewCreateWithoutReviewerInput!
}

input ReviewUpsertWithWhereUniqueWithoutTaskInput {
  where: ReviewWhereUniqueInput!
  update: ReviewUpdateWithoutTaskDataInput!
  create: ReviewCreateWithoutTaskInput!
}

input ReviewWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  rating: RATING
  rating_not: RATING
  rating_in: [RATING!]
  rating_not_in: [RATING!]
  reviewer: UserWhereInput
  task: TaskWhereInput
  AND: [ReviewWhereInput!]
  OR: [ReviewWhereInput!]
  NOT: [ReviewWhereInput!]
}

input ReviewWhereUniqueInput {
  id: ID
}

enum ROLE {
  SUPER_USER
  USER
}

type School {
  id: ID!
  name: String!
  description: String
  domain: String!
  active: Boolean
}

type SchoolConnection {
  pageInfo: PageInfo!
  edges: [SchoolEdge]!
  aggregate: AggregateSchool!
}

input SchoolCreateInput {
  id: ID
  name: String!
  description: String
  domain: String!
  active: Boolean
}

type SchoolEdge {
  node: School!
  cursor: String!
}

enum SchoolOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  domain_ASC
  domain_DESC
  active_ASC
  active_DESC
}

type SchoolPreviousValues {
  id: ID!
  name: String!
  description: String
  domain: String!
  active: Boolean
}

type SchoolSubscriptionPayload {
  mutation: MutationType!
  node: School
  updatedFields: [String!]
  previousValues: SchoolPreviousValues
}

input SchoolSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SchoolWhereInput
  AND: [SchoolSubscriptionWhereInput!]
  OR: [SchoolSubscriptionWhereInput!]
  NOT: [SchoolSubscriptionWhereInput!]
}

input SchoolUpdateInput {
  name: String
  description: String
  domain: String
  active: Boolean
}

input SchoolUpdateManyMutationInput {
  name: String
  description: String
  domain: String
  active: Boolean
}

input SchoolWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  domain: String
  domain_not: String
  domain_in: [String!]
  domain_not_in: [String!]
  domain_lt: String
  domain_lte: String
  domain_gt: String
  domain_gte: String
  domain_contains: String
  domain_not_contains: String
  domain_starts_with: String
  domain_not_starts_with: String
  domain_ends_with: String
  domain_not_ends_with: String
  active: Boolean
  active_not: Boolean
  AND: [SchoolWhereInput!]
  OR: [SchoolWhereInput!]
  NOT: [SchoolWhereInput!]
}

input SchoolWhereUniqueInput {
  id: ID
}

type Subscription {
  category(where: CategorySubscriptionWhereInput): CategorySubscriptionPayload
  conversation(where: ConversationSubscriptionWhereInput): ConversationSubscriptionPayload
  notification(where: NotificationSubscriptionWhereInput): NotificationSubscriptionPayload
  review(where: ReviewSubscriptionWhereInput): ReviewSubscriptionPayload
  school(where: SchoolSubscriptionWhereInput): SchoolSubscriptionPayload
  task(where: TaskSubscriptionWhereInput): TaskSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  userCategory(where: UserCategorySubscriptionWhereInput): UserCategorySubscriptionPayload
}

type Task {
  id: ID!
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
  creator: User!
  participants(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  conversations(where: ConversationWhereInput, orderBy: ConversationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Conversation!]
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review!]
  category: Category!
}

enum TASK_TYPE {
  GROUP
  ONE_TO_ONE
}

type TaskConnection {
  pageInfo: PageInfo!
  edges: [TaskEdge]!
  aggregate: AggregateTask!
}

input TaskCreateInput {
  id: ID
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
  creator: UserCreateOneInput!
  participants: UserCreateManyWithoutTasksInput
  conversations: ConversationCreateManyWithoutTaskInput
  reviews: ReviewCreateManyWithoutTaskInput
  category: CategoryCreateOneWithoutTasksInput!
}

input TaskCreateManyWithoutCategoryInput {
  create: [TaskCreateWithoutCategoryInput!]
  connect: [TaskWhereUniqueInput!]
}

input TaskCreateManyWithoutParticipantsInput {
  create: [TaskCreateWithoutParticipantsInput!]
  connect: [TaskWhereUniqueInput!]
}

input TaskCreateOneWithoutConversationsInput {
  create: TaskCreateWithoutConversationsInput
  connect: TaskWhereUniqueInput
}

input TaskCreateOneWithoutReviewsInput {
  create: TaskCreateWithoutReviewsInput
  connect: TaskWhereUniqueInput
}

input TaskCreateWithoutCategoryInput {
  id: ID
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
  creator: UserCreateOneInput!
  participants: UserCreateManyWithoutTasksInput
  conversations: ConversationCreateManyWithoutTaskInput
  reviews: ReviewCreateManyWithoutTaskInput
}

input TaskCreateWithoutConversationsInput {
  id: ID
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
  creator: UserCreateOneInput!
  participants: UserCreateManyWithoutTasksInput
  reviews: ReviewCreateManyWithoutTaskInput
  category: CategoryCreateOneWithoutTasksInput!
}

input TaskCreateWithoutParticipantsInput {
  id: ID
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
  creator: UserCreateOneInput!
  conversations: ConversationCreateManyWithoutTaskInput
  reviews: ReviewCreateManyWithoutTaskInput
  category: CategoryCreateOneWithoutTasksInput!
}

input TaskCreateWithoutReviewsInput {
  id: ID
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
  creator: UserCreateOneInput!
  participants: UserCreateManyWithoutTasksInput
  conversations: ConversationCreateManyWithoutTaskInput
  category: CategoryCreateOneWithoutTasksInput!
}

type TaskEdge {
  node: Task!
  cursor: String!
}

enum TaskOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  location_ASC
  location_DESC
  eventTime_ASC
  eventTime_DESC
  featured_ASC
  featured_DESC
  flagged_as_objectionable_ASC
  flagged_as_objectionable_DESC
  created_by_joinmi_ASC
  created_by_joinmi_DESC
  task_type_ASC
  task_type_DESC
  active_ASC
  active_DESC
  expiration_ASC
  expiration_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type TaskPreviousValues {
  id: ID!
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

input TaskScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  eventTime: DateTime
  eventTime_not: DateTime
  eventTime_in: [DateTime!]
  eventTime_not_in: [DateTime!]
  eventTime_lt: DateTime
  eventTime_lte: DateTime
  eventTime_gt: DateTime
  eventTime_gte: DateTime
  featured: Boolean
  featured_not: Boolean
  flagged_as_objectionable: Boolean
  flagged_as_objectionable_not: Boolean
  created_by_joinmi: Boolean
  created_by_joinmi_not: Boolean
  task_type: TASK_TYPE
  task_type_not: TASK_TYPE
  task_type_in: [TASK_TYPE!]
  task_type_not_in: [TASK_TYPE!]
  active: Boolean
  active_not: Boolean
  expiration: DateTime
  expiration_not: DateTime
  expiration_in: [DateTime!]
  expiration_not_in: [DateTime!]
  expiration_lt: DateTime
  expiration_lte: DateTime
  expiration_gt: DateTime
  expiration_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [TaskScalarWhereInput!]
  OR: [TaskScalarWhereInput!]
  NOT: [TaskScalarWhereInput!]
}

type TaskSubscriptionPayload {
  mutation: MutationType!
  node: Task
  updatedFields: [String!]
  previousValues: TaskPreviousValues
}

input TaskSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: TaskWhereInput
  AND: [TaskSubscriptionWhereInput!]
  OR: [TaskSubscriptionWhereInput!]
  NOT: [TaskSubscriptionWhereInput!]
}

input TaskUpdateInput {
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
  creator: UserUpdateOneRequiredInput
  participants: UserUpdateManyWithoutTasksInput
  conversations: ConversationUpdateManyWithoutTaskInput
  reviews: ReviewUpdateManyWithoutTaskInput
  category: CategoryUpdateOneRequiredWithoutTasksInput
}

input TaskUpdateManyDataInput {
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
}

input TaskUpdateManyMutationInput {
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
}

input TaskUpdateManyWithoutCategoryInput {
  create: [TaskCreateWithoutCategoryInput!]
  delete: [TaskWhereUniqueInput!]
  connect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  disconnect: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutCategoryInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutCategoryInput!]
  deleteMany: [TaskScalarWhereInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
}

input TaskUpdateManyWithoutParticipantsInput {
  create: [TaskCreateWithoutParticipantsInput!]
  delete: [TaskWhereUniqueInput!]
  connect: [TaskWhereUniqueInput!]
  set: [TaskWhereUniqueInput!]
  disconnect: [TaskWhereUniqueInput!]
  update: [TaskUpdateWithWhereUniqueWithoutParticipantsInput!]
  upsert: [TaskUpsertWithWhereUniqueWithoutParticipantsInput!]
  deleteMany: [TaskScalarWhereInput!]
  updateMany: [TaskUpdateManyWithWhereNestedInput!]
}

input TaskUpdateManyWithWhereNestedInput {
  where: TaskScalarWhereInput!
  data: TaskUpdateManyDataInput!
}

input TaskUpdateOneWithoutConversationsInput {
  create: TaskCreateWithoutConversationsInput
  update: TaskUpdateWithoutConversationsDataInput
  upsert: TaskUpsertWithoutConversationsInput
  delete: Boolean
  disconnect: Boolean
  connect: TaskWhereUniqueInput
}

input TaskUpdateOneWithoutReviewsInput {
  create: TaskCreateWithoutReviewsInput
  update: TaskUpdateWithoutReviewsDataInput
  upsert: TaskUpsertWithoutReviewsInput
  delete: Boolean
  disconnect: Boolean
  connect: TaskWhereUniqueInput
}

input TaskUpdateWithoutCategoryDataInput {
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
  creator: UserUpdateOneRequiredInput
  participants: UserUpdateManyWithoutTasksInput
  conversations: ConversationUpdateManyWithoutTaskInput
  reviews: ReviewUpdateManyWithoutTaskInput
}

input TaskUpdateWithoutConversationsDataInput {
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
  creator: UserUpdateOneRequiredInput
  participants: UserUpdateManyWithoutTasksInput
  reviews: ReviewUpdateManyWithoutTaskInput
  category: CategoryUpdateOneRequiredWithoutTasksInput
}

input TaskUpdateWithoutParticipantsDataInput {
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
  creator: UserUpdateOneRequiredInput
  conversations: ConversationUpdateManyWithoutTaskInput
  reviews: ReviewUpdateManyWithoutTaskInput
  category: CategoryUpdateOneRequiredWithoutTasksInput
}

input TaskUpdateWithoutReviewsDataInput {
  title: String
  description: String
  location: String
  eventTime: DateTime
  featured: Boolean
  flagged_as_objectionable: Boolean
  created_by_joinmi: Boolean
  task_type: TASK_TYPE
  active: Boolean
  expiration: DateTime
  creator: UserUpdateOneRequiredInput
  participants: UserUpdateManyWithoutTasksInput
  conversations: ConversationUpdateManyWithoutTaskInput
  category: CategoryUpdateOneRequiredWithoutTasksInput
}

input TaskUpdateWithWhereUniqueWithoutCategoryInput {
  where: TaskWhereUniqueInput!
  data: TaskUpdateWithoutCategoryDataInput!
}

input TaskUpdateWithWhereUniqueWithoutParticipantsInput {
  where: TaskWhereUniqueInput!
  data: TaskUpdateWithoutParticipantsDataInput!
}

input TaskUpsertWithoutConversationsInput {
  update: TaskUpdateWithoutConversationsDataInput!
  create: TaskCreateWithoutConversationsInput!
}

input TaskUpsertWithoutReviewsInput {
  update: TaskUpdateWithoutReviewsDataInput!
  create: TaskCreateWithoutReviewsInput!
}

input TaskUpsertWithWhereUniqueWithoutCategoryInput {
  where: TaskWhereUniqueInput!
  update: TaskUpdateWithoutCategoryDataInput!
  create: TaskCreateWithoutCategoryInput!
}

input TaskUpsertWithWhereUniqueWithoutParticipantsInput {
  where: TaskWhereUniqueInput!
  update: TaskUpdateWithoutParticipantsDataInput!
  create: TaskCreateWithoutParticipantsInput!
}

input TaskWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  location: String
  location_not: String
  location_in: [String!]
  location_not_in: [String!]
  location_lt: String
  location_lte: String
  location_gt: String
  location_gte: String
  location_contains: String
  location_not_contains: String
  location_starts_with: String
  location_not_starts_with: String
  location_ends_with: String
  location_not_ends_with: String
  eventTime: DateTime
  eventTime_not: DateTime
  eventTime_in: [DateTime!]
  eventTime_not_in: [DateTime!]
  eventTime_lt: DateTime
  eventTime_lte: DateTime
  eventTime_gt: DateTime
  eventTime_gte: DateTime
  featured: Boolean
  featured_not: Boolean
  flagged_as_objectionable: Boolean
  flagged_as_objectionable_not: Boolean
  created_by_joinmi: Boolean
  created_by_joinmi_not: Boolean
  task_type: TASK_TYPE
  task_type_not: TASK_TYPE
  task_type_in: [TASK_TYPE!]
  task_type_not_in: [TASK_TYPE!]
  active: Boolean
  active_not: Boolean
  expiration: DateTime
  expiration_not: DateTime
  expiration_in: [DateTime!]
  expiration_not_in: [DateTime!]
  expiration_lt: DateTime
  expiration_lte: DateTime
  expiration_gt: DateTime
  expiration_gte: DateTime
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  creator: UserWhereInput
  participants_every: UserWhereInput
  participants_some: UserWhereInput
  participants_none: UserWhereInput
  conversations_every: ConversationWhereInput
  conversations_some: ConversationWhereInput
  conversations_none: ConversationWhereInput
  reviews_every: ReviewWhereInput
  reviews_some: ReviewWhereInput
  reviews_none: ReviewWhereInput
  category: CategoryWhereInput
  AND: [TaskWhereInput!]
  OR: [TaskWhereInput!]
  NOT: [TaskWhereInput!]
}

input TaskWhereUniqueInput {
  id: ID
}

type User {
  id: ID!
  email: String!
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  createdAt: DateTime!
  updatedAt: DateTime!
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  notifications(where: NotificationWhereInput, orderBy: NotificationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Notification!]
  block_list(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  tasks(where: TaskWhereInput, orderBy: TaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Task!]
  reviews(where: ReviewWhereInput, orderBy: ReviewOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Review!]
  categories(where: UserCategoryWhereInput, orderBy: UserCategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserCategory!]
  conversations(where: ConversationWhereInput, orderBy: ConversationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Conversation!]
}

type UserCategory {
  id: ID!
  category: Category
  selected: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User
}

type UserCategoryConnection {
  pageInfo: PageInfo!
  edges: [UserCategoryEdge]!
  aggregate: AggregateUserCategory!
}

input UserCategoryCreateInput {
  id: ID
  category: CategoryCreateOneWithoutUserCategoriesInput
  selected: Boolean
  user: UserCreateOneWithoutCategoriesInput
}

input UserCategoryCreateManyWithoutCategoryInput {
  create: [UserCategoryCreateWithoutCategoryInput!]
  connect: [UserCategoryWhereUniqueInput!]
}

input UserCategoryCreateManyWithoutUserInput {
  create: [UserCategoryCreateWithoutUserInput!]
  connect: [UserCategoryWhereUniqueInput!]
}

input UserCategoryCreateWithoutCategoryInput {
  id: ID
  selected: Boolean
  user: UserCreateOneWithoutCategoriesInput
}

input UserCategoryCreateWithoutUserInput {
  id: ID
  category: CategoryCreateOneWithoutUserCategoriesInput
  selected: Boolean
}

type UserCategoryEdge {
  node: UserCategory!
  cursor: String!
}

enum UserCategoryOrderByInput {
  id_ASC
  id_DESC
  selected_ASC
  selected_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserCategoryPreviousValues {
  id: ID!
  selected: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

input UserCategoryScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  selected: Boolean
  selected_not: Boolean
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  AND: [UserCategoryScalarWhereInput!]
  OR: [UserCategoryScalarWhereInput!]
  NOT: [UserCategoryScalarWhereInput!]
}

type UserCategorySubscriptionPayload {
  mutation: MutationType!
  node: UserCategory
  updatedFields: [String!]
  previousValues: UserCategoryPreviousValues
}

input UserCategorySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserCategoryWhereInput
  AND: [UserCategorySubscriptionWhereInput!]
  OR: [UserCategorySubscriptionWhereInput!]
  NOT: [UserCategorySubscriptionWhereInput!]
}

input UserCategoryUpdateInput {
  category: CategoryUpdateOneWithoutUserCategoriesInput
  selected: Boolean
  user: UserUpdateOneWithoutCategoriesInput
}

input UserCategoryUpdateManyDataInput {
  selected: Boolean
}

input UserCategoryUpdateManyMutationInput {
  selected: Boolean
}

input UserCategoryUpdateManyWithoutCategoryInput {
  create: [UserCategoryCreateWithoutCategoryInput!]
  delete: [UserCategoryWhereUniqueInput!]
  connect: [UserCategoryWhereUniqueInput!]
  set: [UserCategoryWhereUniqueInput!]
  disconnect: [UserCategoryWhereUniqueInput!]
  update: [UserCategoryUpdateWithWhereUniqueWithoutCategoryInput!]
  upsert: [UserCategoryUpsertWithWhereUniqueWithoutCategoryInput!]
  deleteMany: [UserCategoryScalarWhereInput!]
  updateMany: [UserCategoryUpdateManyWithWhereNestedInput!]
}

input UserCategoryUpdateManyWithoutUserInput {
  create: [UserCategoryCreateWithoutUserInput!]
  delete: [UserCategoryWhereUniqueInput!]
  connect: [UserCategoryWhereUniqueInput!]
  set: [UserCategoryWhereUniqueInput!]
  disconnect: [UserCategoryWhereUniqueInput!]
  update: [UserCategoryUpdateWithWhereUniqueWithoutUserInput!]
  upsert: [UserCategoryUpsertWithWhereUniqueWithoutUserInput!]
  deleteMany: [UserCategoryScalarWhereInput!]
  updateMany: [UserCategoryUpdateManyWithWhereNestedInput!]
}

input UserCategoryUpdateManyWithWhereNestedInput {
  where: UserCategoryScalarWhereInput!
  data: UserCategoryUpdateManyDataInput!
}

input UserCategoryUpdateWithoutCategoryDataInput {
  selected: Boolean
  user: UserUpdateOneWithoutCategoriesInput
}

input UserCategoryUpdateWithoutUserDataInput {
  category: CategoryUpdateOneWithoutUserCategoriesInput
  selected: Boolean
}

input UserCategoryUpdateWithWhereUniqueWithoutCategoryInput {
  where: UserCategoryWhereUniqueInput!
  data: UserCategoryUpdateWithoutCategoryDataInput!
}

input UserCategoryUpdateWithWhereUniqueWithoutUserInput {
  where: UserCategoryWhereUniqueInput!
  data: UserCategoryUpdateWithoutUserDataInput!
}

input UserCategoryUpsertWithWhereUniqueWithoutCategoryInput {
  where: UserCategoryWhereUniqueInput!
  update: UserCategoryUpdateWithoutCategoryDataInput!
  create: UserCategoryCreateWithoutCategoryInput!
}

input UserCategoryUpsertWithWhereUniqueWithoutUserInput {
  where: UserCategoryWhereUniqueInput!
  update: UserCategoryUpdateWithoutUserDataInput!
  create: UserCategoryCreateWithoutUserInput!
}

input UserCategoryWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  category: CategoryWhereInput
  selected: Boolean
  selected_not: Boolean
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  user: UserWhereInput
  AND: [UserCategoryWhereInput!]
  OR: [UserCategoryWhereInput!]
  NOT: [UserCategoryWhereInput!]
}

input UserCategoryWhereUniqueInput {
  id: ID
}

type UserConnection {
  pageInfo: PageInfo!
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  email: String!
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  notifications: NotificationCreateManyWithoutUserInput
  block_list: UserCreateManyInput
  tasks: TaskCreateManyWithoutParticipantsInput
  reviews: ReviewCreateManyWithoutReviewerInput
  categories: UserCategoryCreateManyWithoutUserInput
  conversations: ConversationCreateManyWithoutParticipantsInput
}

input UserCreateManyInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutConversationsInput {
  create: [UserCreateWithoutConversationsInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutTasksInput {
  create: [UserCreateWithoutTasksInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutCategoriesInput {
  create: UserCreateWithoutCategoriesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutNotificationsInput {
  create: UserCreateWithoutNotificationsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutReviewsInput {
  create: UserCreateWithoutReviewsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutCategoriesInput {
  id: ID
  email: String!
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  notifications: NotificationCreateManyWithoutUserInput
  block_list: UserCreateManyInput
  tasks: TaskCreateManyWithoutParticipantsInput
  reviews: ReviewCreateManyWithoutReviewerInput
  conversations: ConversationCreateManyWithoutParticipantsInput
}

input UserCreateWithoutConversationsInput {
  id: ID
  email: String!
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  notifications: NotificationCreateManyWithoutUserInput
  block_list: UserCreateManyInput
  tasks: TaskCreateManyWithoutParticipantsInput
  reviews: ReviewCreateManyWithoutReviewerInput
  categories: UserCategoryCreateManyWithoutUserInput
}

input UserCreateWithoutNotificationsInput {
  id: ID
  email: String!
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  block_list: UserCreateManyInput
  tasks: TaskCreateManyWithoutParticipantsInput
  reviews: ReviewCreateManyWithoutReviewerInput
  categories: UserCategoryCreateManyWithoutUserInput
  conversations: ConversationCreateManyWithoutParticipantsInput
}

input UserCreateWithoutReviewsInput {
  id: ID
  email: String!
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  notifications: NotificationCreateManyWithoutUserInput
  block_list: UserCreateManyInput
  tasks: TaskCreateManyWithoutParticipantsInput
  categories: UserCategoryCreateManyWithoutUserInput
  conversations: ConversationCreateManyWithoutParticipantsInput
}

input UserCreateWithoutTasksInput {
  id: ID
  email: String!
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  notifications: NotificationCreateManyWithoutUserInput
  block_list: UserCreateManyInput
  reviews: ReviewCreateManyWithoutReviewerInput
  categories: UserCategoryCreateManyWithoutUserInput
  conversations: ConversationCreateManyWithoutParticipantsInput
}

type UserEdge {
  node: User!
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  token_ASC
  token_DESC
  name_ASC
  name_DESC
  username_ASC
  username_DESC
  description_ASC
  description_DESC
  major_ASC
  major_DESC
  townYouGrewUpIn_ASC
  townYouGrewUpIn_DESC
  favoriteHobby_ASC
  favoriteHobby_DESC
  photo_url_ASC
  photo_url_DESC
  cover_photo_url_ASC
  cover_photo_url_DESC
  flagged_as_objectionable_ASC
  flagged_as_objectionable_DESC
  view_objectionable_content_ASC
  view_objectionable_content_DESC
  school_ASC
  school_DESC
  about_me_ASC
  about_me_DESC
  receive_push_notifications_ASC
  receive_push_notifications_DESC
  oneSignalPlayerId_ASC
  oneSignalPlayerId_DESC
  fcm_token_ASC
  fcm_token_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  facebook_social_link_ASC
  facebook_social_link_DESC
  twitter_social_link_ASC
  twitter_social_link_DESC
  instagram_social_link_ASC
  instagram_social_link_DESC
  snapchat_social_link_ASC
  snapchat_social_link_DESC
  role_ASC
  role_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  createdAt: DateTime!
  updatedAt: DateTime!
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
}

input UserScalarWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  token: String
  token_not: String
  token_in: [String!]
  token_not_in: [String!]
  token_lt: String
  token_lte: String
  token_gt: String
  token_gte: String
  token_contains: String
  token_not_contains: String
  token_starts_with: String
  token_not_starts_with: String
  token_ends_with: String
  token_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  major: String
  major_not: String
  major_in: [String!]
  major_not_in: [String!]
  major_lt: String
  major_lte: String
  major_gt: String
  major_gte: String
  major_contains: String
  major_not_contains: String
  major_starts_with: String
  major_not_starts_with: String
  major_ends_with: String
  major_not_ends_with: String
  townYouGrewUpIn: String
  townYouGrewUpIn_not: String
  townYouGrewUpIn_in: [String!]
  townYouGrewUpIn_not_in: [String!]
  townYouGrewUpIn_lt: String
  townYouGrewUpIn_lte: String
  townYouGrewUpIn_gt: String
  townYouGrewUpIn_gte: String
  townYouGrewUpIn_contains: String
  townYouGrewUpIn_not_contains: String
  townYouGrewUpIn_starts_with: String
  townYouGrewUpIn_not_starts_with: String
  townYouGrewUpIn_ends_with: String
  townYouGrewUpIn_not_ends_with: String
  favoriteHobby: String
  favoriteHobby_not: String
  favoriteHobby_in: [String!]
  favoriteHobby_not_in: [String!]
  favoriteHobby_lt: String
  favoriteHobby_lte: String
  favoriteHobby_gt: String
  favoriteHobby_gte: String
  favoriteHobby_contains: String
  favoriteHobby_not_contains: String
  favoriteHobby_starts_with: String
  favoriteHobby_not_starts_with: String
  favoriteHobby_ends_with: String
  favoriteHobby_not_ends_with: String
  photo_url: String
  photo_url_not: String
  photo_url_in: [String!]
  photo_url_not_in: [String!]
  photo_url_lt: String
  photo_url_lte: String
  photo_url_gt: String
  photo_url_gte: String
  photo_url_contains: String
  photo_url_not_contains: String
  photo_url_starts_with: String
  photo_url_not_starts_with: String
  photo_url_ends_with: String
  photo_url_not_ends_with: String
  cover_photo_url: String
  cover_photo_url_not: String
  cover_photo_url_in: [String!]
  cover_photo_url_not_in: [String!]
  cover_photo_url_lt: String
  cover_photo_url_lte: String
  cover_photo_url_gt: String
  cover_photo_url_gte: String
  cover_photo_url_contains: String
  cover_photo_url_not_contains: String
  cover_photo_url_starts_with: String
  cover_photo_url_not_starts_with: String
  cover_photo_url_ends_with: String
  cover_photo_url_not_ends_with: String
  flagged_as_objectionable: Boolean
  flagged_as_objectionable_not: Boolean
  view_objectionable_content: Boolean
  view_objectionable_content_not: Boolean
  school: String
  school_not: String
  school_in: [String!]
  school_not_in: [String!]
  school_lt: String
  school_lte: String
  school_gt: String
  school_gte: String
  school_contains: String
  school_not_contains: String
  school_starts_with: String
  school_not_starts_with: String
  school_ends_with: String
  school_not_ends_with: String
  about_me: String
  about_me_not: String
  about_me_in: [String!]
  about_me_not_in: [String!]
  about_me_lt: String
  about_me_lte: String
  about_me_gt: String
  about_me_gte: String
  about_me_contains: String
  about_me_not_contains: String
  about_me_starts_with: String
  about_me_not_starts_with: String
  about_me_ends_with: String
  about_me_not_ends_with: String
  receive_push_notifications: Boolean
  receive_push_notifications_not: Boolean
  oneSignalPlayerId: String
  oneSignalPlayerId_not: String
  oneSignalPlayerId_in: [String!]
  oneSignalPlayerId_not_in: [String!]
  oneSignalPlayerId_lt: String
  oneSignalPlayerId_lte: String
  oneSignalPlayerId_gt: String
  oneSignalPlayerId_gte: String
  oneSignalPlayerId_contains: String
  oneSignalPlayerId_not_contains: String
  oneSignalPlayerId_starts_with: String
  oneSignalPlayerId_not_starts_with: String
  oneSignalPlayerId_ends_with: String
  oneSignalPlayerId_not_ends_with: String
  fcm_token: String
  fcm_token_not: String
  fcm_token_in: [String!]
  fcm_token_not_in: [String!]
  fcm_token_lt: String
  fcm_token_lte: String
  fcm_token_gt: String
  fcm_token_gte: String
  fcm_token_contains: String
  fcm_token_not_contains: String
  fcm_token_starts_with: String
  fcm_token_not_starts_with: String
  fcm_token_ends_with: String
  fcm_token_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  facebook_social_link: String
  facebook_social_link_not: String
  facebook_social_link_in: [String!]
  facebook_social_link_not_in: [String!]
  facebook_social_link_lt: String
  facebook_social_link_lte: String
  facebook_social_link_gt: String
  facebook_social_link_gte: String
  facebook_social_link_contains: String
  facebook_social_link_not_contains: String
  facebook_social_link_starts_with: String
  facebook_social_link_not_starts_with: String
  facebook_social_link_ends_with: String
  facebook_social_link_not_ends_with: String
  twitter_social_link: String
  twitter_social_link_not: String
  twitter_social_link_in: [String!]
  twitter_social_link_not_in: [String!]
  twitter_social_link_lt: String
  twitter_social_link_lte: String
  twitter_social_link_gt: String
  twitter_social_link_gte: String
  twitter_social_link_contains: String
  twitter_social_link_not_contains: String
  twitter_social_link_starts_with: String
  twitter_social_link_not_starts_with: String
  twitter_social_link_ends_with: String
  twitter_social_link_not_ends_with: String
  instagram_social_link: String
  instagram_social_link_not: String
  instagram_social_link_in: [String!]
  instagram_social_link_not_in: [String!]
  instagram_social_link_lt: String
  instagram_social_link_lte: String
  instagram_social_link_gt: String
  instagram_social_link_gte: String
  instagram_social_link_contains: String
  instagram_social_link_not_contains: String
  instagram_social_link_starts_with: String
  instagram_social_link_not_starts_with: String
  instagram_social_link_ends_with: String
  instagram_social_link_not_ends_with: String
  snapchat_social_link: String
  snapchat_social_link_not: String
  snapchat_social_link_in: [String!]
  snapchat_social_link_not_in: [String!]
  snapchat_social_link_lt: String
  snapchat_social_link_lte: String
  snapchat_social_link_gt: String
  snapchat_social_link_gte: String
  snapchat_social_link_contains: String
  snapchat_social_link_not_contains: String
  snapchat_social_link_starts_with: String
  snapchat_social_link_not_starts_with: String
  snapchat_social_link_ends_with: String
  snapchat_social_link_not_ends_with: String
  role: ROLE
  role_not: ROLE
  role_in: [ROLE!]
  role_not_in: [ROLE!]
  AND: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: UserWhereInput
  AND: [UserSubscriptionWhereInput!]
  OR: [UserSubscriptionWhereInput!]
  NOT: [UserSubscriptionWhereInput!]
}

input UserUpdateDataInput {
  email: String
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  notifications: NotificationUpdateManyWithoutUserInput
  block_list: UserUpdateManyInput
  tasks: TaskUpdateManyWithoutParticipantsInput
  reviews: ReviewUpdateManyWithoutReviewerInput
  categories: UserCategoryUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
}

input UserUpdateInput {
  email: String
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  notifications: NotificationUpdateManyWithoutUserInput
  block_list: UserUpdateManyInput
  tasks: TaskUpdateManyWithoutParticipantsInput
  reviews: ReviewUpdateManyWithoutReviewerInput
  categories: UserCategoryUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
}

input UserUpdateManyDataInput {
  email: String
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
}

input UserUpdateManyInput {
  create: [UserCreateInput!]
  update: [UserUpdateWithWhereUniqueNestedInput!]
  upsert: [UserUpsertWithWhereUniqueNestedInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyMutationInput {
  email: String
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
}

input UserUpdateManyWithoutConversationsInput {
  create: [UserCreateWithoutConversationsInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutConversationsInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutConversationsInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithoutTasksInput {
  create: [UserCreateWithoutTasksInput!]
  delete: [UserWhereUniqueInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutTasksInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutTasksInput!]
  deleteMany: [UserScalarWhereInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdateOneRequiredInput {
  create: UserCreateInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutNotificationsInput {
  create: UserCreateWithoutNotificationsInput
  update: UserUpdateWithoutNotificationsDataInput
  upsert: UserUpsertWithoutNotificationsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneRequiredWithoutReviewsInput {
  create: UserCreateWithoutReviewsInput
  update: UserUpdateWithoutReviewsDataInput
  upsert: UserUpsertWithoutReviewsInput
  connect: UserWhereUniqueInput
}

input UserUpdateOneWithoutCategoriesInput {
  create: UserCreateWithoutCategoriesInput
  update: UserUpdateWithoutCategoriesDataInput
  upsert: UserUpsertWithoutCategoriesInput
  delete: Boolean
  disconnect: Boolean
  connect: UserWhereUniqueInput
}

input UserUpdateWithoutCategoriesDataInput {
  email: String
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  notifications: NotificationUpdateManyWithoutUserInput
  block_list: UserUpdateManyInput
  tasks: TaskUpdateManyWithoutParticipantsInput
  reviews: ReviewUpdateManyWithoutReviewerInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
}

input UserUpdateWithoutConversationsDataInput {
  email: String
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  notifications: NotificationUpdateManyWithoutUserInput
  block_list: UserUpdateManyInput
  tasks: TaskUpdateManyWithoutParticipantsInput
  reviews: ReviewUpdateManyWithoutReviewerInput
  categories: UserCategoryUpdateManyWithoutUserInput
}

input UserUpdateWithoutNotificationsDataInput {
  email: String
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  block_list: UserUpdateManyInput
  tasks: TaskUpdateManyWithoutParticipantsInput
  reviews: ReviewUpdateManyWithoutReviewerInput
  categories: UserCategoryUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
}

input UserUpdateWithoutReviewsDataInput {
  email: String
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  notifications: NotificationUpdateManyWithoutUserInput
  block_list: UserUpdateManyInput
  tasks: TaskUpdateManyWithoutParticipantsInput
  categories: UserCategoryUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
}

input UserUpdateWithoutTasksDataInput {
  email: String
  token: String
  name: String
  username: String
  description: String
  major: String
  townYouGrewUpIn: String
  favoriteHobby: String
  photo_url: String
  cover_photo_url: String
  flagged_as_objectionable: Boolean
  view_objectionable_content: Boolean
  school: String
  about_me: String
  receive_push_notifications: Boolean
  oneSignalPlayerId: String
  fcm_token: String
  facebook_social_link: String
  twitter_social_link: String
  instagram_social_link: String
  snapchat_social_link: String
  role: ROLE
  notifications: NotificationUpdateManyWithoutUserInput
  block_list: UserUpdateManyInput
  reviews: ReviewUpdateManyWithoutReviewerInput
  categories: UserCategoryUpdateManyWithoutUserInput
  conversations: ConversationUpdateManyWithoutParticipantsInput
}

input UserUpdateWithWhereUniqueNestedInput {
  where: UserWhereUniqueInput!
  data: UserUpdateDataInput!
}

input UserUpdateWithWhereUniqueWithoutConversationsInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutConversationsDataInput!
}

input UserUpdateWithWhereUniqueWithoutTasksInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutTasksDataInput!
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutCategoriesInput {
  update: UserUpdateWithoutCategoriesDataInput!
  create: UserCreateWithoutCategoriesInput!
}

input UserUpsertWithoutNotificationsInput {
  update: UserUpdateWithoutNotificationsDataInput!
  create: UserCreateWithoutNotificationsInput!
}

input UserUpsertWithoutReviewsInput {
  update: UserUpdateWithoutReviewsDataInput!
  create: UserCreateWithoutReviewsInput!
}

input UserUpsertWithWhereUniqueNestedInput {
  where: UserWhereUniqueInput!
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithWhereUniqueWithoutConversationsInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutConversationsDataInput!
  create: UserCreateWithoutConversationsInput!
}

input UserUpsertWithWhereUniqueWithoutTasksInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutTasksDataInput!
  create: UserCreateWithoutTasksInput!
}

input UserWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  email: String
  email_not: String
  email_in: [String!]
  email_not_in: [String!]
  email_lt: String
  email_lte: String
  email_gt: String
  email_gte: String
  email_contains: String
  email_not_contains: String
  email_starts_with: String
  email_not_starts_with: String
  email_ends_with: String
  email_not_ends_with: String
  token: String
  token_not: String
  token_in: [String!]
  token_not_in: [String!]
  token_lt: String
  token_lte: String
  token_gt: String
  token_gte: String
  token_contains: String
  token_not_contains: String
  token_starts_with: String
  token_not_starts_with: String
  token_ends_with: String
  token_not_ends_with: String
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  username: String
  username_not: String
  username_in: [String!]
  username_not_in: [String!]
  username_lt: String
  username_lte: String
  username_gt: String
  username_gte: String
  username_contains: String
  username_not_contains: String
  username_starts_with: String
  username_not_starts_with: String
  username_ends_with: String
  username_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  major: String
  major_not: String
  major_in: [String!]
  major_not_in: [String!]
  major_lt: String
  major_lte: String
  major_gt: String
  major_gte: String
  major_contains: String
  major_not_contains: String
  major_starts_with: String
  major_not_starts_with: String
  major_ends_with: String
  major_not_ends_with: String
  townYouGrewUpIn: String
  townYouGrewUpIn_not: String
  townYouGrewUpIn_in: [String!]
  townYouGrewUpIn_not_in: [String!]
  townYouGrewUpIn_lt: String
  townYouGrewUpIn_lte: String
  townYouGrewUpIn_gt: String
  townYouGrewUpIn_gte: String
  townYouGrewUpIn_contains: String
  townYouGrewUpIn_not_contains: String
  townYouGrewUpIn_starts_with: String
  townYouGrewUpIn_not_starts_with: String
  townYouGrewUpIn_ends_with: String
  townYouGrewUpIn_not_ends_with: String
  favoriteHobby: String
  favoriteHobby_not: String
  favoriteHobby_in: [String!]
  favoriteHobby_not_in: [String!]
  favoriteHobby_lt: String
  favoriteHobby_lte: String
  favoriteHobby_gt: String
  favoriteHobby_gte: String
  favoriteHobby_contains: String
  favoriteHobby_not_contains: String
  favoriteHobby_starts_with: String
  favoriteHobby_not_starts_with: String
  favoriteHobby_ends_with: String
  favoriteHobby_not_ends_with: String
  photo_url: String
  photo_url_not: String
  photo_url_in: [String!]
  photo_url_not_in: [String!]
  photo_url_lt: String
  photo_url_lte: String
  photo_url_gt: String
  photo_url_gte: String
  photo_url_contains: String
  photo_url_not_contains: String
  photo_url_starts_with: String
  photo_url_not_starts_with: String
  photo_url_ends_with: String
  photo_url_not_ends_with: String
  cover_photo_url: String
  cover_photo_url_not: String
  cover_photo_url_in: [String!]
  cover_photo_url_not_in: [String!]
  cover_photo_url_lt: String
  cover_photo_url_lte: String
  cover_photo_url_gt: String
  cover_photo_url_gte: String
  cover_photo_url_contains: String
  cover_photo_url_not_contains: String
  cover_photo_url_starts_with: String
  cover_photo_url_not_starts_with: String
  cover_photo_url_ends_with: String
  cover_photo_url_not_ends_with: String
  flagged_as_objectionable: Boolean
  flagged_as_objectionable_not: Boolean
  view_objectionable_content: Boolean
  view_objectionable_content_not: Boolean
  school: String
  school_not: String
  school_in: [String!]
  school_not_in: [String!]
  school_lt: String
  school_lte: String
  school_gt: String
  school_gte: String
  school_contains: String
  school_not_contains: String
  school_starts_with: String
  school_not_starts_with: String
  school_ends_with: String
  school_not_ends_with: String
  about_me: String
  about_me_not: String
  about_me_in: [String!]
  about_me_not_in: [String!]
  about_me_lt: String
  about_me_lte: String
  about_me_gt: String
  about_me_gte: String
  about_me_contains: String
  about_me_not_contains: String
  about_me_starts_with: String
  about_me_not_starts_with: String
  about_me_ends_with: String
  about_me_not_ends_with: String
  receive_push_notifications: Boolean
  receive_push_notifications_not: Boolean
  oneSignalPlayerId: String
  oneSignalPlayerId_not: String
  oneSignalPlayerId_in: [String!]
  oneSignalPlayerId_not_in: [String!]
  oneSignalPlayerId_lt: String
  oneSignalPlayerId_lte: String
  oneSignalPlayerId_gt: String
  oneSignalPlayerId_gte: String
  oneSignalPlayerId_contains: String
  oneSignalPlayerId_not_contains: String
  oneSignalPlayerId_starts_with: String
  oneSignalPlayerId_not_starts_with: String
  oneSignalPlayerId_ends_with: String
  oneSignalPlayerId_not_ends_with: String
  fcm_token: String
  fcm_token_not: String
  fcm_token_in: [String!]
  fcm_token_not_in: [String!]
  fcm_token_lt: String
  fcm_token_lte: String
  fcm_token_gt: String
  fcm_token_gte: String
  fcm_token_contains: String
  fcm_token_not_contains: String
  fcm_token_starts_with: String
  fcm_token_not_starts_with: String
  fcm_token_ends_with: String
  fcm_token_not_ends_with: String
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  facebook_social_link: String
  facebook_social_link_not: String
  facebook_social_link_in: [String!]
  facebook_social_link_not_in: [String!]
  facebook_social_link_lt: String
  facebook_social_link_lte: String
  facebook_social_link_gt: String
  facebook_social_link_gte: String
  facebook_social_link_contains: String
  facebook_social_link_not_contains: String
  facebook_social_link_starts_with: String
  facebook_social_link_not_starts_with: String
  facebook_social_link_ends_with: String
  facebook_social_link_not_ends_with: String
  twitter_social_link: String
  twitter_social_link_not: String
  twitter_social_link_in: [String!]
  twitter_social_link_not_in: [String!]
  twitter_social_link_lt: String
  twitter_social_link_lte: String
  twitter_social_link_gt: String
  twitter_social_link_gte: String
  twitter_social_link_contains: String
  twitter_social_link_not_contains: String
  twitter_social_link_starts_with: String
  twitter_social_link_not_starts_with: String
  twitter_social_link_ends_with: String
  twitter_social_link_not_ends_with: String
  instagram_social_link: String
  instagram_social_link_not: String
  instagram_social_link_in: [String!]
  instagram_social_link_not_in: [String!]
  instagram_social_link_lt: String
  instagram_social_link_lte: String
  instagram_social_link_gt: String
  instagram_social_link_gte: String
  instagram_social_link_contains: String
  instagram_social_link_not_contains: String
  instagram_social_link_starts_with: String
  instagram_social_link_not_starts_with: String
  instagram_social_link_ends_with: String
  instagram_social_link_not_ends_with: String
  snapchat_social_link: String
  snapchat_social_link_not: String
  snapchat_social_link_in: [String!]
  snapchat_social_link_not_in: [String!]
  snapchat_social_link_lt: String
  snapchat_social_link_lte: String
  snapchat_social_link_gt: String
  snapchat_social_link_gte: String
  snapchat_social_link_contains: String
  snapchat_social_link_not_contains: String
  snapchat_social_link_starts_with: String
  snapchat_social_link_not_starts_with: String
  snapchat_social_link_ends_with: String
  snapchat_social_link_not_ends_with: String
  role: ROLE
  role_not: ROLE
  role_in: [ROLE!]
  role_not_in: [ROLE!]
  notifications_every: NotificationWhereInput
  notifications_some: NotificationWhereInput
  notifications_none: NotificationWhereInput
  block_list_every: UserWhereInput
  block_list_some: UserWhereInput
  block_list_none: UserWhereInput
  tasks_every: TaskWhereInput
  tasks_some: TaskWhereInput
  tasks_none: TaskWhereInput
  reviews_every: ReviewWhereInput
  reviews_some: ReviewWhereInput
  reviews_none: ReviewWhereInput
  categories_every: UserCategoryWhereInput
  categories_some: UserCategoryWhereInput
  categories_none: UserCategoryWhereInput
  conversations_every: ConversationWhereInput
  conversations_some: ConversationWhereInput
  conversations_none: ConversationWhereInput
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
`